@model List<OnThiLaiXe.Models.LichSuThi>
@{
    ViewData["Title"] = "Lịch sử thi";
}

<div class="container12">
    <div class="main-row">
        <!-- Lịch sử thi -->
        <div class="main-content">


            <div class="card-body scrollable-history">
                <table class="custom-table">
                    <thead>
                        <tr>
                            <th>Bài thi</th>
                            <th>Ngày</th>
                            <th>Số câu</th>
                            <th>Đúng</th>
                            <th>Tỷ lệ</th>
                            <th>Điểm</th>
                            <th>KQ</th>
                            <th>Xem</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model == null || !Model.Any())
                        {
                            <tr>
                                <td colspan="8" style="text-align: center; color: #888;">
                                    Bạn chưa có bài thi nào.
                                </td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var item in Model.OrderByDescending(x => x.NgayThi).Take(20))
                            {
                                var tyLe = item.TongSoCau > 0 ? (item.SoCauDung / (double)item.TongSoCau) * 100 : 0;
                                var rowClass = item.KetQua == "Đạt" ? "row-pass" : "row-fail";

                                <tr class="@rowClass">
                                    <td>@item.TenBaiThi</td>
                                    <td>@item.NgayThi.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>@item.TongSoCau</td>
                                    <td>@item.SoCauDung</td>
                                    <td>@tyLe.ToString("0.0")%</td>
                                    <td>@item.Diem</td>
                                    <td>
                                        <span class="badge @(item.KetQua == "Đạt" ? "green-badge" : "red-badge")">@item.KetQua</span>
                                        @if (item.MacLoiNghiemTrong)
                                        {
                                            <span class="warning-icon" title="Sai câu điểm liệt">⚠️</span>
                                        }
                                    </td>
                                    <td><a href="/LichSuThi/ChiTiet/@item.Id" class="view-button">Xem</a></td>

                                </tr>
                            }}
                    </tbody>

                </table>
            </div>

        </div>

        <!-- Thống kê -->
        <div class="stat-panel">
            <div class="card custom-shadow">
                <div class="card-header blue-header">Thống kê kết quả</div>
                <div class="card-body">
                    <canvas id="resultChartt" width="200" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- CSS -->
<style>


    .main-row {
        display: flex;
        gap: 20px;
        align-items: flex-start;
    }

    .main-content {
        flex: 3;
    }

    .stat-panel {
        flex: 1;
    }

    .card {
        border: 1px solid #ccc;
        border-radius: 6px;
        overflow: hidden;
        background: white;
    }

    .card-header {
        padding: 10px 15px;
        font-weight: bold;
        font-size: 16px;
    }

    .gray-header {
        background-color: #6c757d;
        color: white;
    }

    .blue-header {
        background-color: #007bff;
        color: white;
    }

    .card-body {
        padding: 15px;
    }

    .custom-shadow {
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .scrollable-history {
        max-height: 500px;
        overflow-y: auto;
    }

    .custom-table {
        width: 100%;
        border-collapse: collapse;
    }

        .custom-table th, .custom-table td {
            border: 1px solid #ddd;
            padding: 8px;
            font-size: 14px;
            text-align: center;
        }

        .custom-table thead {
            background-color: #99cbfb;
        }

    .row-pass {
        background-color: #e6ffed;
    }

    .row-fail {
        background-color: #fefefe;
    }

    .green-badge {
        background-color: #28a745;
        color: white;
        padding: 2px 8px;
        border-radius: 4px;
        font-size: 12px;
    }

    .red-badge {
        background-color: #f66d6d;
        color: white;
        padding: 2px 8px;
        border-radius: 4px;
        font-size: 12px;
    }

    .warning-icon {
        font-size: 16px;
        margin-left: 5px;
        color: orange;
    }

    .blue-header {
        background-color: #bf6726e3;
        color: white;
    }

    .view-button {
        padding: 4px 8px;
        background-color: #5b8def;
        color: white;
        text-decoration: none;
        border-radius: 4px;
        font-size: 13px;
    }

        .view-button:hover {
            background-color: #0056b3;
        }

    .stat-panel .card-body {
        padding: 10px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    #resultChartt {
        width: 200px !important;
        height: 200px !important;
    }

</style>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('resultChartt').getContext('2d');
               const resultChartt = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Đạt', 'Không đạt'],
                datasets: [{
                    label: 'Thống kê',
                    data: [
        @Model.Count(m => m.KetQua == "Đạt"),
        @Model.Count(m => m.KetQua != "Đạt")
                    ],
                    backgroundColor: ['#81c784', '#ef9a9a'], // ✅ Màu pastel dễ chịu
                    borderColor: ['#fff', '#fff'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                cutout: '60%',
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                           boxWidth: 15,        // ✅ Kích thước ô vuông nhỏ
                padding: 20,         // ✅ Khoảng cách giữa các item
                usePointStyle: false,
                color: '#333',
                font: {
                    size: 13
                }
                        }
                    },
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                const value = context.parsed;
                                const total = context.chart._metasets[0].total;
                                const percentage = (value / total * 100).toFixed(1);
                                return `${context.label}: ${value} (${percentage}%)`;
                            }
                        }
                    }
                },
            }
        });

    </script>
}
