@model List<OnThiLaiXe.Models.CauHoi>
@{
    ViewData["Title"] = "Ôn tập câu sai";
    int currentIndex = 0;
}
<style>
    :root {
        --primary-color: linear-gradient(90deg, #0056d2, #007bff);
        --primary-solid: #0056d2;
        --primary-hover: #0044bb;
    }

    body {
        font-family: 'Inter', sans-serif;
        font-size: 15px;
        background-color: #ffffff;
    }

    .container-flex {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        flex-wrap: wrap;
        gap: 24px;
        padding: 20px;
    }

    .question-container {
        flex: 1;
        min-width: 640px;
        background-color: #FFFCF6;
        padding: 24px;
        border-radius: 8px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.05);
    }

    .side-panel {
        width: 280px;
        background-color: #f7f9fb;
        padding: 24px;
        border-radius: 8px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.05);
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
    }

    .question-card {
        transition: opacity 0.3s ease-in-out;
    }

        .question-card.d-none {
            display: none;
        }

    .question-buttons {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 8px;
        width: 100%;
    }

    .question-button {
        padding: 10px;
        font-weight: 600;
        border-radius: 6px;
        background-color: #fff;
        border: 1px solid #d1d5db;
        transition: all 0.2s;
        cursor: pointer;
    }

        .question-button:hover {
            background-color: #f3f4f6;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

    .current-question {
        background: var(--primary-color);
        color: white;
        font-weight: bold;
        border: none;
    }

    .btn-answered {
        background-color: #d1fae5;
        color: #065f46;
    }

    .navigation-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 24px;
    }

    .previous-button, .next-button {
        padding: 10px 20px;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        border: none;
    }

    .previous-button {
        background: white;
        color: var(--primary-solid);
        border: 1px solid var(--primary-solid);
    }

        .previous-button:hover {
            background-color: #e0eaff;
        }

    .next-button {
        background: var(--primary-color);
        color: white;
        border: none;
    }

        .next-button:hover {
            background: var(--primary-hover);
        }

    .submit-button {
        background: var(--primary-color);
        color: white;
        font-weight: 600;
        padding: 12px 24px;
        border-radius: 8px;
        margin-top: 20px;
        border: none;
    }

        .submit-button:hover {
            background: var(--primary-hover);
        }

    .option-item {
        display: flex;
        gap: 10px;
        font-size: 14px;
        margin-bottom: 10px;
    }

        .option-item input {
            margin-top: 4px;
        }

    img {
        max-width: 100%;
        height: auto;
        border-radius: 6px;
        border: 1px solid #ccc;
        margin-top: 16px;
    }
</style>


<form method="post" action="@Url.Action("LuuKetQuaLuyenLai")">
    <div class="container-flex">

        <!-- Main content -->
        <div class="question-container">
            @foreach (var cauHoi in Model)
            {
                <div class="question-card @(currentIndex == 0 ? "" : "d-none")"
                     data-index="@currentIndex" data-id="@cauHoi.Id">
                    @if (cauHoi.DiemLiet)
                    {
                        <span class="badge bg-danger mb-2">Điểm liệt</span>
                    }

                    <h5 class="fw-semibold">@cauHoi.NoiDung</h5>

                    @if (!string.IsNullOrEmpty(cauHoi.MediaUrl))
                    {
                        <div class="text-center">
                            <img src="@cauHoi.MediaUrl" />
                        </div>
                    }

                    <div class="mt-3">
                        <label class="option-item"><input type="radio" name="cauHoi_@cauHoi.Id" value="A" onchange="markAnswered(@currentIndex)" /> A. @cauHoi.LuaChonA</label>
                        <label class="option-item"><input type="radio" name="cauHoi_@cauHoi.Id" value="B" onchange="markAnswered(@currentIndex)" /> B. @cauHoi.LuaChonB</label>
                        @if (!string.IsNullOrEmpty(cauHoi.LuaChonC))
                        {
                            <label class="option-item"><input type="radio" name="cauHoi_@cauHoi.Id" value="C" onchange="markAnswered(@currentIndex)" /> C. @cauHoi.LuaChonC</label>
                        }
                        @if (!string.IsNullOrEmpty(cauHoi.LuaChonD))
                        {
                            <label class="option-item"><input type="radio" name="cauHoi_@cauHoi.Id" value="D" onchange="markAnswered(@currentIndex)" /> D. @cauHoi.LuaChonD</label>
                        }
                    </div>
                </div>
                currentIndex++;
            }

            <div class="navigation-buttons">
                <button id="prev-question" type="button" class="previous-button" onclick="previousQuestion()">← Câu trước</button>
                <button id="next-question" type="button" class="next-button" onclick="nextQuestion()">Câu tiếp →</button>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="side-panel">
            <div class="question-buttons">
                @for (int i = 0; i < Model.Count; i++)
                {
                    <button id="btn-question-@i" class="question-button" type="button" onclick="showQuestion(@i)">
                        @(i + 1)
                    </button>
                }
            </div>

            <button type="submit" class="submit-button">Nộp bài</button>
        </div>
    </div>
</form>

<script>
    let currentIndex = 0;
    const total = @Model.Count;

    function showQuestion(index) {
        document.querySelectorAll('.question-card').forEach((card, i) => {
            card.classList.toggle('d-none', i !== index);
        });

        currentIndex = index;
        document.getElementById('prev-question').disabled = currentIndex === 0;
        document.getElementById('next-question').disabled = currentIndex === total - 1;

        document.querySelectorAll('.question-button').forEach(btn => {
            btn.classList.remove('current-question');
        });
        const currentBtn = document.getElementById('btn-question-' + index);
        if (currentBtn) {
            currentBtn.classList.add('current-question');
        }
    }

    function previousQuestion() {
        if (currentIndex > 0) showQuestion(currentIndex - 1);
    }

    function nextQuestion() {
        if (currentIndex < total - 1) showQuestion(currentIndex + 1);
    }

    function markAnswered(index) {
        const btn = document.getElementById('btn-question-' + index);
        if (btn && !btn.classList.contains('btn-answered')) {
            btn.classList.add('btn-answered');
        }
    }

    showQuestion(0);
</script>
