@model IEnumerable<OnThiLaiXe.Models.CauHoi>
@{
    ViewData["Title"] = "Danh sách câu hỏi";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background-color: #f8f9fa;
        font-family: 'Arial', sans-serif;
    }

    .container {
        margin-top: 30px;
    }

    .table thead {
        background-color: #f4e1d2;
        color: #5d4037;
        cursor: pointer;
    }

    .table tbody tr:nth-child(even) {
        background-color: #f7f1e1;
    }

    .table tbody tr:hover {
        background-color: #f1e5d8;
    }

    /* Định dạng đặc biệt cho các dòng đã bị xóa mềm */
    .row-deleted {
        background-color: #ffebee !important; /* Màu nền đỏ nhạt */
        color: #d32f2f;
        position: relative;
    }

        .row-deleted:hover {
            background-color: #ffcdd2 !important; /* Màu nền đỏ nhạt khi hover */
        }

        /* Phủ một lớp mờ lên các dòng đã xóa */
        .row-deleted td {
            opacity: 0.9;
        }

    .btn-add {
        background-color: #8e7d6a;
        color: white;
        font-weight: bold;
        padding: 10px 15px;
        border-radius: 5px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        transition: background-color 0.3s ease;
    }

        .btn-add:hover {
            background-color: #6d5b42;
        }

    .btn-warning, .btn-info, .btn-danger, .btn-success {
        padding: 6px 12px;
        border-radius: 5px;
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
        margin: 0 2px;
    }

    .btn-warning {
        background-color: #ffb74d;
        color: black;
    }

    .btn-info {
        background-color: #64b5f6;
        color: black;
    }

    .btn-danger {
        background-color: #ef5350;
        color: white;
    }

    .btn-success {
        background-color: #66bb6a;
        color: white;
    }

    .action-column {
        width: 240px;
        white-space: nowrap;
    }

    .status-column {
        width: 120px; /* Đặt độ rộng cột trạng thái */
        min-width: 120px; /* Đảm bảo kích thước tối thiểu */
    }

    .filter-container {
        margin-bottom: 20px;
        padding: 20px;
        background-color: #ffffff;
        border-radius: 10px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }

        .filter-container input,
        .filter-container select {
            padding: 10px;
            font-size: 16px;
            border-radius: 5px;
            border: 1px solid #ccc;
            width: 100%;
        }

    #sortNoiDung {
        cursor: pointer;
        font-weight: bold;
        color: #5d4037;
    }

        #sortNoiDung:hover {
            color: #ff9800;
        }

    .autocomplete-items {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        z-index: 1050;
        background-color: white;
        border: 1px solid #ccc;
        border-top: none;
        max-height: 250px;
        overflow-y: auto;
        border-radius: 0 0 5px 5px;
        box-shadow: 0px 4px 8px rgba(0,0,0,0.1);
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            border-bottom: 1px solid #eee;
            transition: background 0.2s;
        }

            .autocomplete-items div:hover {
                background-color: #f1f1f1;
            }

    .status-badge {
        display: inline-block;
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 0.85em;
        font-weight: bold;
    }

    .status-badge-deleted {
        background-color: #ffcdd2;
        color: #d32f2f;
        border: 1px solid #ef9a9a;
    }

    .status-badge-active {
        background-color: #c8e6c9;
        color: #388e3c;
        border: 1px solid #a5d6a7;
    }
</style>

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-primary fw-bold">Danh sách câu hỏi</h2>
        <a asp-action="Add" class="btn btn-add">Thêm câu hỏi</a>
    </div>

    <!-- Bộ lọc -->
    <div class="filter-container row g-3 position-relative">
        <div class="col-md-3 col-sm-12 position-relative">
            <input type="text" id="SearchCauHoi" placeholder="Tìm kiếm câu hỏi..." class="form-control" autocomplete="on" />
            <div id="autocomplete-list" class="autocomplete-items"></div>
        </div>
        <div class="col-md-3 col-sm-12">
            <select id="filterChuDe" class="form-select">
                <option value="">-- Lọc theo Chủ đề --</option>
                @foreach (var chuDe in ViewBag.ChuDesList)
                {
                    <option value="@chuDe.TenChuDe">@chuDe.TenChuDe</option>
                }
            </select>
        </div>
        <div class="col-md-3 col-sm-12">
            <select id="filterLoaiBang" class="form-select">
                <option value="">-- Lọc theo Loại bằng --</option>
                @foreach (var loaiBang in ViewBag.LoaiBangLaisList)
                {
                    <option value="@loaiBang.TenLoai">@loaiBang.TenLoai</option>
                }
            </select>
        </div>
        <div class="col-md-3 col-sm-12">
            <select id="filterStatus" class="form-select">
                <option value="">-- Lọc theo Trạng thái --</option>
                <option value="active">Đang hoạt động</option>
                <option value="deleted">Đã xóa</option>
            </select>
        </div>
    </div>

    <table class="table table-bordered text-center">
        <thead>
            <tr>
                <th>Chủ đề</th>
                <th>Loại bằng</th>
                <th id="sortNoiDung">Nội dung</th>
                <th>Điểm liệt</th>
                <th class="action-column">Hành động</th>
                <th class="status-column">Trạng thái</th>
            </tr>
        </thead>
        <tbody id="tableBody">
            @foreach (var item in Model)
            {
                <tr class="@(item.isDeleted ? "row-deleted" : "")" data-id="@item.Id">
                    <td class="chuDe">@item.ChuDe.TenChuDe</td>
                    <td class="loaiBang">@item.LoaiBangLai.TenLoai</td>
                    <td class="noiDung">@item.NoiDung</td>
                    <td>
                        @if (item.DiemLiet)
                        {
                            <i class="bi bi-exclamation-circle-fill text-danger" title="Câu điểm liệt"></i>
                        }
                        else
                        {
                            <i class="bi bi-check-circle-fill text-success" title="Không điểm liệt"></i>
                        }
                    </td>

                    <td class="action-column">
                        <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-sm btn-warning" title="Sửa">
                            <i class="bi bi-pencil-square"></i>
                        </a>
                        <a asp-action="Display" asp-route-id="@item.Id" class="btn btn-sm btn-info" title="Xem">
                            <i class="bi bi-eye"></i>
                        </a>
                        <!-- Nút xóa/khôi phục chuyển vào cột hành động -->
                        <a asp-action="ToggleActive" asp-route-id="@item.Id"
                           class="btn btn-sm status-btn @(item.isDeleted ? "btn-success" : "btn-danger")"
                           title="@(item.isDeleted ? "Khôi phục câu hỏi đã xóa" : "Xóa câu hỏi này")">
                            <i class="bi @(item.isDeleted ? "bi-arrow-counterclockwise" : "bi-trash")"></i>
                            @(item.isDeleted ? "Khôi phục" : "Xóa")
                        </a>
                    </td>
                    <td class="status-column">
                        <!-- Chỉ hiển thị trạng thái -->
                        <span class="status-badge @(item.isDeleted ? "status-badge-deleted" : "status-badge-active")">
                            <i class="bi @(item.isDeleted ? "bi-trash" : "bi-check-circle")"></i>
                            @(item.isDeleted ? "Đã xóa" : "Hoạt động")
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script src="/JS/AutoComplete.js"></script>
    <script>
        const searchBox = document.getElementById("SearchCauHoi");
        const filterChuDe = document.getElementById("filterChuDe");
        const filterLoaiBang = document.getElementById("filterLoaiBang");
        const filterStatus = document.getElementById("filterStatus");
        const tableBody = document.getElementById("tableBody");
        const autoCompleteBox = document.getElementById("autocomplete-list");

        function filterRows() {
            const keyword = searchBox.value.toLowerCase();
            const selectedChuDe = filterChuDe.value;
            const selectedLoaiBang = filterLoaiBang.value;
            const selectedStatus = filterStatus.value;

            const rows = tableBody.querySelectorAll("tr");

            rows.forEach(row => {
                const chuDe = row.querySelector(".chuDe").textContent.trim();
                const loaiBang = row.querySelector(".loaiBang").textContent.trim();
                const noiDung = row.querySelector(".noiDung").textContent.toLowerCase();
                const isDeleted = row.classList.contains("row-deleted");

                const matchKeyword = noiDung.includes(keyword);
                const matchChuDe = !selectedChuDe || chuDe === selectedChuDe;
                const matchLoai = !selectedLoaiBang || loaiBang === selectedLoaiBang;
                const matchStatus = !selectedStatus ||
                                   (selectedStatus === "deleted" && isDeleted) ||
                                   (selectedStatus === "active" && !isDeleted);

                row.style.display = (matchKeyword && matchChuDe && matchLoai && matchStatus) ? "" : "none";
            });
        }

        searchBox.addEventListener("keyup", filterRows);
        filterChuDe.addEventListener("change", filterRows);
        filterLoaiBang.addEventListener("change", filterRows);
        filterStatus.addEventListener("change", filterRows);

        // Sort nội dung
        let sortDirection = false;
        document.getElementById("sortNoiDung").addEventListener("click", function () {
            const rows = Array.from(tableBody.rows);
            rows.sort((a, b) => {
                const aText = a.querySelector(".noiDung").textContent.trim().toLowerCase();
                const bText = b.querySelector(".noiDung").textContent.trim().toLowerCase();
                return sortDirection ? aText.localeCompare(bText) : bText.localeCompare(aText);
            });

            tableBody.innerHTML = "";
            rows.forEach(row => tableBody.appendChild(row));
            sortDirection = !sortDirection;
            this.innerHTML = `Nội dung ${sortDirection ? '⬆️' : '⬇️'}`;
        });

        // Thêm xác nhận cho các nút toggle trạng thái
        document.querySelectorAll('.status-btn').forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const url = this.getAttribute('href');
                const isDeleted = this.classList.contains('btn-success');
                const noiDung = this.closest('tr').querySelector('.noiDung').textContent.trim();
                const action = isDeleted ? "khôi phục" : "xóa";

                const confirmMessage = `Bạn có chắc chắn muốn ${action} câu hỏi:\n"${noiDung.substring(0, 50)}${noiDung.length > 50 ? '...' : ''}"?`;

                if (confirm(confirmMessage)) {
                    window.location.href = url;
                }
            });
        });

        // Highlight dòng đang được xem
        document.addEventListener("DOMContentLoaded", function() {
            // Lấy id từ URL nếu có
            const urlParams = new URLSearchParams(window.location.search);
            const highlightId = urlParams.get('highlight');

            if (highlightId) {
                // Tự động scroll đến dòng được highlight
                const row = document.querySelector(`tr[data-id="${highlightId}"]`);
                if (row) {
                    row.classList.add("bg-light");
                    row.style.transition = "background-color 2s";

                    // Scroll đến dòng đó
                    row.scrollIntoView({ behavior: 'smooth', block: 'center' });

                    // Sau 3 giây, bỏ highlight
                    setTimeout(() => {
                        row.classList.remove("bg-light");
                    }, 3000);
                }
            }
        });
    </script>
}